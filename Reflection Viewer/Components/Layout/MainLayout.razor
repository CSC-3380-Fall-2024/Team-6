@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Forms
@inject IWebHostEnvironment WebHostEnvironment

<div class="main-layout">
    <header>
        <h1>PDF Viewer and Uploader</h1>
    </header>

    <main>
        <div class="upload-section">
            <h2>Upload a PDF</h2>
            <InputFile OnChange="HandleFileSelected" accept=".pdf" />
        </div>

        @if (!string.IsNullOrEmpty(UploadedPdfPath))
        {
            <div class="pdf-viewer">
                <h2>View PDF</h2>
                <iframe src="@UploadedPdfPath" width="100%" height="600px"></iframe>
            </div>
        }
    </main>

    <footer>
        <p>&copy; @DateTime.Now.Year - PDF Viewer and Uploader</p>
    </footer>
</div>

<style>
    .main-layout {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
    }

    header {
        background-color: #0078d7;
        color: white;
        padding: 1rem;
        text-align: center;
    }

    main {
        flex-grow: 1;
        padding: 2rem;
        text-align: center;
    }

    .upload-section {
        margin-bottom: 2rem;
    }

    .pdf-viewer {
        margin-top: 2rem;
        border: 1px solid #ccc;
        padding: 1rem;
        background-color: #f9f9f9;
    }

    footer {
        background-color: #f8f9fa;
        color: #6c757d;
        padding: 1rem;
        text-align: center;
    }
</style>

@code {
    private string UploadedPdfPath;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;

        if (file != null)
        {
            if (file.ContentType != "application/pdf")
            {
                UploadedPdfPath = null; // Reset the viewer if an invalid file is uploaded
                return;
            }

            // Save the file to the 'wwwroot/uploads' folder
            var uploadsFolder = Path.Combine(WebHostEnvironment.WebRootPath, "uploads");

            // Ensure the folder exists
            if (!Directory.Exists(uploadsFolder))
            {
                Directory.CreateDirectory(uploadsFolder);
            }

            var fileName = $"{Path.GetFileNameWithoutExtension(file.Name)}_{DateTime.Now:yyyyMMddHHmmss}{Path.GetExtension(file.Name)}";
            var filePath = Path.Combine(uploadsFolder, fileName);

            // Save the file
            using (var stream = new FileStream(filePath, FileMode.Create))
            {
                await file.OpenReadStream().CopyToAsync(stream);
            }

            // Set the path for the iframe to display the uploaded file
            UploadedPdfPath = $"/uploads/{fileName}";
        }
    }
}

